
syntax = "proto3";
import "google/protobuf/empty.proto";
import "nrpc.proto";

package risk;

option go_package = "/risk/nrpc/v1";

service Risk{
    rpc RpcAlive(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    rpc RpcRiskTxs (TxRiskReq) returns (TxRiskRes) {}
    rpc RpcRiskTFA (TFARiskReq) returns (TFARiskRes) {}

    ///
    rpc RpcContractAbiBriefs (ContractAbiBriefsReq) returns (ContractAbiBriefsRes) {}
    rpc RpcContractAbi(ContractAbiReq) returns (ContractAbiRes) {}

    rpc RpcContractRuleBriefs(ContractRuleBriefsReq) returns (ContractRuleBriefsRes){}
    rpc RpcContractRule(ContractRuleReq) returns (ContractRuleRes){}
    ////
}
///
message ContractRuleBriefsReq {
    string SeceneNo = 1;
    string Kind = 2;
    string Address = 3;
}
message ContractRuleBriefsRes {
    string SeceneNo = 1;
    string Address = 2;
    string Name = 3;
    string Kind = 4;
}
message ContractRuleReq{
    string SeceneNo = 1;
    string Kind = 2;
    string Address = 3;
}
message ContractRule {
    string contract = 1;
    string name = 2;
    string kind = 3;
 
    string methodName = 4;
    string methodSig = 5;
    string methodFromField = 6;
    string methodToField = 7;
    string methodValueField = 8;
 
    string eventName = 9;
    string eventSig = 10;
    string eventTopic =11;
    string eventFromField = 12;
    string eventToField = 13;
    string eventValueField = 14;
 
    repeated string skipToAddr = 15;
    bytes threshold_bigint_bytes = 16;

}
message ContractRuleRes{
    map<string, ContractRule> Rules = 1;
}
//
///
//
message ContractAbiBriefsReq{
    string SceneNo = 1;
    string Kind = 2;
    string Address = 3;
}
message ContractAbiBrief {
    string SceneNo = 1;
    string Address = 2;
    string Name = 3;
    string Kind = 4;
}
message ContractAbiBriefsRes{
    map<string, ContractAbiBrief> Briefs = 1;
}
message ContractAbiReq{
    string SceneNo = 1;
    string Kind = 2;
    string Address = 3;
}

message ContractAbiRes{

}
////
///
message RiskTx {
    string Contract =1; // v: required
    string TxData = 2;  // v: required
}
message TxRiskReq {
    string UserId = 1;// v: required
    string Address = 2; // v: required
    ////
    string SignTxData = 3; // v: required
}


message TxRiskRes {
    int32 Ok = 1;
    string Msg = 2;
    string RiskSerial = 3; 
    repeated string RiskKind = 4;
}
////
message TFARiskReq {
    string UserId = 1; // v: required
	string Type = 2; // v: required
	string Mail = 3;
	string Phone = 4;
}
message TFARiskRes {
    int32 Ok = 1;
    string Msg = 2;
    string RiskSerial = 3; 
}
///
