
syntax = "proto3";
import "google/protobuf/empty.proto";
import "nrpc.proto";

package risk;

option go_package = "/risk/nrpc/v1";

service Risk{
    rpc RpcAlive(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    rpc RpcRiskTxs (TxRiskReq) returns (TxRiskRes) {}
    rpc RpcRiskTFA (TFARiskReq) returns (TFARiskRes) {}

    ///
    rpc RpcAllAbi (AllAbiReq) returns (AllAbiRes) {}
    rpc RpcAllNftRules(NftRulesReq) returns (NftRulesRes){}
    rpc RpcAllFtRules(FtRulesReq) returns (FtRulesRes){}
    ////
}
///
message FtRulesReq{}
message Ftrules {
    string contract = 1;
    string name = 2;
 
    string methodName = 3;
    string methodSig = 4;
    string methodFromField = 5;
    string methodToField = 6;
    string methodValueField = 7;
 
    string eventName = 8;
    string eventSig = 9;
    string eventTopic = 10;
    string eventFromField = 11;
    string eventToField = 12;
    string eventValueField = 13;
 
    repeated string skipToAddr = 14;
    bytes threshold_bigint_bytes = 15;
}
message FtRulesRes{
    map<string, Ftrules> ftRules = 1;
}
///
message NftRulesReq {}
message NftRules{
    string contract = 1;
    string name = 2;
  
    string methodName = 3;
    string methodSig = 4;
    string methodFromField = 5;
    string methodToField = 6;
    string methodTokenIdField = 7;
  
    string eventName = 8;
    string eventSig = 9;
    string eventTopic = 10;
    string eventFromField = 11;
    string eventToField = 12;
    string eventTokenIdField = 13;
  
    repeated string skipToAddr = 14;
    int32 threshold = 15;
}

message NftRulesRes {
    map<string, NftRules> nftRules = 1;
}
//
message AllAbiReq {}
message AllAbiRes {
    map<string, string> Abis = 1;
}
////
message RiskTx {
    string Contract =1; // v: required
    string TxData = 2;  // v: required
}
message TxRiskReq {
    string UserId = 1;// v: required
    string Address = 2; // v: required
    ////
    string SignTxData = 3; // v: required
}


message TxRiskRes {
    int32 Ok = 1;
    string Msg = 2;
    string RiskSerial = 3; 
    repeated string RiskKind = 4;
}
////
message TFARiskReq {
    string UserId = 1; // v: required
	string Type = 2; // v: required
	string Mail = 3;
	string Phone = 4;
}
message TFARiskRes {
    int32 Ok = 1;
    string Msg = 2;
    string RiskSerial = 3; 
}
///
